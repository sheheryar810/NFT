import type { OASDocument, OperationObject, SchemaObject } from '../rmoas.types';
import * as RMOAS from '../rmoas.types';
export declare type SchemaWrapper = {
    $schema?: string;
    type: string;
    label?: string;
    schema: SchemaObject;
    deprecatedProps?: SchemaWrapper;
};
/**
 * The order of this object determines how they will be sorted in the compiled JSON Schema representation.
 *
 * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#parameterObject}
 * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#parameterObject}
 */
export declare const types: {
    [key: keyof RMOAS.OASDocument]: string;
};
/**
 * @param path
 * @param operation
 * @param api
 * @param globalDefaults
 */
export default function getParametersAsJsonSchema(path: string, operation: OperationObject, api: OASDocument, globalDefaults?: {}): SchemaWrapper[];
